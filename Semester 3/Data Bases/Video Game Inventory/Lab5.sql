CREATE TABLE RARITY(
	id INT PRIMARY KEY,
	level INT UNIQUE
)

CREATE TABLE WEAPON_RARITY(
	id INT PRIMARY KEY,
	weapon_id INT FOREIGN KEY REFERENCES WEAPON(id),
	rarity_id INT FOREIGN KEY REFERENCES RARITY(id)
)

INSERT INTO RARITY(id, level) VALUES (1, 1)
INSERT INTO RARITY(id, level) VALUES (2, 2)
INSERT INTO RARITY(id, level) VALUES (3, 3)
INSERT INTO RARITY(id, level) VALUES (4, 4)
INSERT INTO RARITY(id, level) VALUES (5, 5)

SELECT * FROM WEAPON

INSERT INTO WEAPON_RARITY(id, weapon_id, rarity_id) VALUES (1, 0, 3) 
INSERT INTO WEAPON_RARITY(id, weapon_id, rarity_id) VALUES (2, 1, 1)
INSERT INTO WEAPON_RARITY(id, weapon_id, rarity_id) VALUES (3, 2, 4)
INSERT INTO WEAPON_RARITY(id, weapon_id, rarity_id) VALUES (4, 3, 3)
INSERT INTO WEAPON_RARITY(id, weapon_id, rarity_id) VALUES (5, 4, 5)
INSERT INTO WEAPON_RARITY(id, weapon_id, rarity_id) VALUES (6, 5, 2)
INSERT INTO WEAPON_RARITY(id, weapon_id, rarity_id) VALUES (7, 6, 2)
INSERT INTO WEAPON_RARITY(id, weapon_id, rarity_id) VALUES (8, 7, 3)
INSERT INTO WEAPON_RARITY(id, weapon_id, rarity_id) VALUES (9, 8, 5)
INSERT INTO WEAPON_RARITY(id, weapon_id, rarity_id) VALUES (10, 9, 5)

ALTER TABLE RARITY ADD description VARCHAR(50); 

SELECT * FROM RARITY ORDER BY id;
SELECT * FROM RARITY WHERE id > 2
SELECT level FROM RARITY WHERE level > 3;
SELECT level FROM RARITY
SELECT * FROM RARITY WHERE level = 1

SELECT name FROM WEAPON WHERE damage = 60

CREATE NONCLUSTERED INDEX IX_Weapon_Damage ON Weapon(name, damage) 
DROP INDEX IX_Weapon_DAMAGE ON Weapon

GO
CREATE VIEW View_4 AS
	SELECT WEAPON.name, RARITY.level FROM WEAPON
	INNER JOIN WEAPON_RARITY ON WEAPON.id = WEAPON_RARITY.weapon_id
	INNER JOIN RARITY ON RARITY.id = WEAPON_RARITY.rarity_id
	WHERE RARITY.level > 2 AND WEAPON.damage > 50
GO

SELECT * FROM View_4