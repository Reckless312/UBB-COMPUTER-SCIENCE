Program id: 11
Execution Stack:
Integer v
Ref(Integer) a
v = Integer: 10
Allocate in heap: a -> Integer: 22
Fork: Write in heap: a -> Integer: 30, v = Integer: 32, Print(v), Print((Read from heap a))
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
#########################################################################
Program id: 11
Execution Stack:
Integer v
Ref(Integer) a
v = Integer: 10
Allocate in heap: a -> Integer: 22
Fork: Write in heap: a -> Integer: 30, v = Integer: 32, Print(v), Print((Read from heap a))
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
#########################################################################
Program id: 11
Execution Stack:
Integer v
Ref(Integer) a
v = Integer: 10
Allocate in heap: a -> Integer: 22
Fork: Write in heap: a -> Integer: 30, v = Integer: 32, Print(v), Print((Read from heap a))
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
#########################################################################
Program id: 11
Execution Stack:
Ref(Integer) a
v = Integer: 10
Allocate in heap: a -> Integer: 22
Fork: Write in heap: a -> Integer: 30, v = Integer: 32, Print(v), Print((Read from heap a))
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ v --> Integer: 0 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
#########################################################################
Program id: 11
Execution Stack:
Ref(Integer) a
v = Integer: 10
Allocate in heap: a -> Integer: 22
Fork: Write in heap: a -> Integer: 30, v = Integer: 32, Print(v), Print((Read from heap a))
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ v --> Integer: 0 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
#########################################################################
Program id: 11
Execution Stack:
Ref(Integer) a
v = Integer: 10
Allocate in heap: a -> Integer: 22
Fork: Write in heap: a -> Integer: 30, v = Integer: 32, Print(v), Print((Read from heap a))
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ v --> Integer: 0 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
#########################################################################
Program id: 11
Execution Stack:
Ref(Integer) a
v = Integer: 10
Allocate in heap: a -> Integer: 22
Fork: Write in heap: a -> Integer: 30, v = Integer: 32, Print(v), Print((Read from heap a))
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ v --> Integer: 0 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
#########################################################################
Program id: 11
Execution Stack:
v = Integer: 10
Allocate in heap: a -> Integer: 22
Fork: Write in heap: a -> Integer: 30, v = Integer: 32, Print(v), Print((Read from heap a))
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 0 }
{ v --> Integer: 0 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
#########################################################################
Program id: 11
Execution Stack:
v = Integer: 10
Allocate in heap: a -> Integer: 22
Fork: Write in heap: a -> Integer: 30, v = Integer: 32, Print(v), Print((Read from heap a))
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 0 }
{ v --> Integer: 0 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
#########################################################################
Program id: 11
Execution Stack:
v = Integer: 10
Allocate in heap: a -> Integer: 22
Fork: Write in heap: a -> Integer: 30, v = Integer: 32, Print(v), Print((Read from heap a))
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 0 }
{ v --> Integer: 0 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
#########################################################################
Program id: 11
Execution Stack:
v = Integer: 10
Allocate in heap: a -> Integer: 22
Fork: Write in heap: a -> Integer: 30, v = Integer: 32, Print(v), Print((Read from heap a))
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 0 }
{ v --> Integer: 0 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
#########################################################################
Program id: 11
Execution Stack:
Allocate in heap: a -> Integer: 22
Fork: Write in heap: a -> Integer: 30, v = Integer: 32, Print(v), Print((Read from heap a))
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 0 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
#########################################################################
Program id: 11
Execution Stack:
Allocate in heap: a -> Integer: 22
Fork: Write in heap: a -> Integer: 30, v = Integer: 32, Print(v), Print((Read from heap a))
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 0 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
#########################################################################
Program id: 11
Execution Stack:
Allocate in heap: a -> Integer: 22
Fork: Write in heap: a -> Integer: 30, v = Integer: 32, Print(v), Print((Read from heap a))
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 0 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
#########################################################################
Program id: 11
Execution Stack:
Allocate in heap: a -> Integer: 22
Fork: Write in heap: a -> Integer: 30, v = Integer: 32, Print(v), Print((Read from heap a))
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 0 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
#########################################################################
Program id: 11
Execution Stack:
Fork: Write in heap: a -> Integer: 30, v = Integer: 32, Print(v), Print((Read from heap a))
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 22 }
#########################################################################
Program id: 11
Execution Stack:
Fork: Write in heap: a -> Integer: 30, v = Integer: 32, Print(v), Print((Read from heap a))
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 22 }
#########################################################################
Program id: 11
Execution Stack:
Fork: Write in heap: a -> Integer: 30, v = Integer: 32, Print(v), Print((Read from heap a))
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 22 }
#########################################################################
Program id: 11
Execution Stack:
Fork: Write in heap: a -> Integer: 30, v = Integer: 32, Print(v), Print((Read from heap a))
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 22 }
#########################################################################
Program id: 11
Execution Stack:
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 22 }
#########################################################################
Program id: 12
Execution Stack:
Write in heap: a -> Integer: 30
v = Integer: 32
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 22 }
#########################################################################
Program id: 11
Execution Stack:
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 22 }
#########################################################################
Program id: 12
Execution Stack:
Write in heap: a -> Integer: 30
v = Integer: 32
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 22 }
#########################################################################
Program id: 11
Execution Stack:
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 22 }
#########################################################################
Program id: 12
Execution Stack:
Write in heap: a -> Integer: 30
v = Integer: 32
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 22 }
#########################################################################
Program id: 11
Execution Stack:
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 22 }
#########################################################################
Program id: 12
Execution Stack:
Write in heap: a -> Integer: 30
v = Integer: 32
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 22 }
#########################################################################
Program id: 11
Execution Stack:
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
Printed: Integer: 10
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 30 }
#########################################################################
Program id: 12
Execution Stack:
v = Integer: 32
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
Printed: Integer: 10
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 30 }
#########################################################################
Program id: 11
Execution Stack:
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
Printed: Integer: 10
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 30 }
#########################################################################
Program id: 12
Execution Stack:
v = Integer: 32
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
Printed: Integer: 10
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 30 }
#########################################################################
Program id: 11
Execution Stack:
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
Printed: Integer: 10
Printed: Integer: 30
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 30 }
#########################################################################
Program id: 12
Execution Stack:
v = Integer: 32
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
Printed: Integer: 10
Printed: Integer: 30
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 30 }
#########################################################################
Program id: 12
Execution Stack:
v = Integer: 32
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
Printed: Integer: 10
Printed: Integer: 30
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 30 }
#########################################################################
Program id: 12
Execution Stack:
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 32 }
------------------------------------------------------------------------
Out:
Printed: Integer: 10
Printed: Integer: 30
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 30 }
#########################################################################
Program id: 12
Execution Stack:
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 32 }
------------------------------------------------------------------------
Out:
Printed: Integer: 10
Printed: Integer: 30
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 30 }
#########################################################################
Program id: 12
Execution Stack:
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 32 }
------------------------------------------------------------------------
Out:
Printed: Integer: 10
Printed: Integer: 30
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 30 }
#########################################################################
Program id: 12
Execution Stack:
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 32 }
------------------------------------------------------------------------
Out:
Printed: Integer: 10
Printed: Integer: 30
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 30 }
#########################################################################
Program id: 12
Execution Stack:
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 32 }
------------------------------------------------------------------------
Out:
Printed: Integer: 10
Printed: Integer: 30
Printed: Integer: 32
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 30 }
#########################################################################
Program id: 12
Execution Stack:
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 32 }
------------------------------------------------------------------------
Out:
Printed: Integer: 10
Printed: Integer: 30
Printed: Integer: 32
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 30 }
#########################################################################
Program id: 12
Execution Stack:
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 32 }
------------------------------------------------------------------------
Out:
Printed: Integer: 10
Printed: Integer: 30
Printed: Integer: 32
Printed: Integer: 30
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 30 }
#########################################################################
Program id: 10
Execution Stack:
Integer v
Ref(Integer) a
v = Integer: 10
Allocate in heap: a -> Integer: 22
Fork: Write in heap: a -> Integer: 30, v = Integer: 32, Print(v), Print((Read from heap a))
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
#########################################################################
Program id: 10
Execution Stack:
Integer v
Ref(Integer) a
v = Integer: 10
Allocate in heap: a -> Integer: 22
Fork: Write in heap: a -> Integer: 30, v = Integer: 32, Print(v), Print((Read from heap a))
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
#########################################################################
Program id: 10
Execution Stack:
Integer v
Ref(Integer) a
v = Integer: 10
Allocate in heap: a -> Integer: 22
Fork: Write in heap: a -> Integer: 30, v = Integer: 32, Print(v), Print((Read from heap a))
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
#########################################################################
Program id: 10
Execution Stack:
Ref(Integer) a
v = Integer: 10
Allocate in heap: a -> Integer: 22
Fork: Write in heap: a -> Integer: 30, v = Integer: 32, Print(v), Print((Read from heap a))
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ v --> Integer: 0 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
#########################################################################
Program id: 10
Execution Stack:
Ref(Integer) a
v = Integer: 10
Allocate in heap: a -> Integer: 22
Fork: Write in heap: a -> Integer: 30, v = Integer: 32, Print(v), Print((Read from heap a))
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ v --> Integer: 0 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
#########################################################################
Program id: 10
Execution Stack:
Ref(Integer) a
v = Integer: 10
Allocate in heap: a -> Integer: 22
Fork: Write in heap: a -> Integer: 30, v = Integer: 32, Print(v), Print((Read from heap a))
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ v --> Integer: 0 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
#########################################################################
Program id: 10
Execution Stack:
Ref(Integer) a
v = Integer: 10
Allocate in heap: a -> Integer: 22
Fork: Write in heap: a -> Integer: 30, v = Integer: 32, Print(v), Print((Read from heap a))
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ v --> Integer: 0 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
#########################################################################
Program id: 10
Execution Stack:
v = Integer: 10
Allocate in heap: a -> Integer: 22
Fork: Write in heap: a -> Integer: 30, v = Integer: 32, Print(v), Print((Read from heap a))
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 0 }
{ v --> Integer: 0 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
#########################################################################
Program id: 10
Execution Stack:
v = Integer: 10
Allocate in heap: a -> Integer: 22
Fork: Write in heap: a -> Integer: 30, v = Integer: 32, Print(v), Print((Read from heap a))
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 0 }
{ v --> Integer: 0 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
#########################################################################
Program id: 10
Execution Stack:
v = Integer: 10
Allocate in heap: a -> Integer: 22
Fork: Write in heap: a -> Integer: 30, v = Integer: 32, Print(v), Print((Read from heap a))
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 0 }
{ v --> Integer: 0 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
#########################################################################
Program id: 10
Execution Stack:
v = Integer: 10
Allocate in heap: a -> Integer: 22
Fork: Write in heap: a -> Integer: 30, v = Integer: 32, Print(v), Print((Read from heap a))
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 0 }
{ v --> Integer: 0 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
#########################################################################
Program id: 10
Execution Stack:
Allocate in heap: a -> Integer: 22
Fork: Write in heap: a -> Integer: 30, v = Integer: 32, Print(v), Print((Read from heap a))
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 0 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
#########################################################################
Program id: 10
Execution Stack:
Allocate in heap: a -> Integer: 22
Fork: Write in heap: a -> Integer: 30, v = Integer: 32, Print(v), Print((Read from heap a))
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 0 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
#########################################################################
Program id: 10
Execution Stack:
Allocate in heap: a -> Integer: 22
Fork: Write in heap: a -> Integer: 30, v = Integer: 32, Print(v), Print((Read from heap a))
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 0 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
#########################################################################
Program id: 10
Execution Stack:
Allocate in heap: a -> Integer: 22
Fork: Write in heap: a -> Integer: 30, v = Integer: 32, Print(v), Print((Read from heap a))
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 0 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
#########################################################################
Program id: 10
Execution Stack:
Fork: Write in heap: a -> Integer: 30, v = Integer: 32, Print(v), Print((Read from heap a))
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 22 }
#########################################################################
Program id: 10
Execution Stack:
Fork: Write in heap: a -> Integer: 30, v = Integer: 32, Print(v), Print((Read from heap a))
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 22 }
#########################################################################
Program id: 10
Execution Stack:
Fork: Write in heap: a -> Integer: 30, v = Integer: 32, Print(v), Print((Read from heap a))
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 22 }
#########################################################################
Program id: 10
Execution Stack:
Fork: Write in heap: a -> Integer: 30, v = Integer: 32, Print(v), Print((Read from heap a))
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 22 }
#########################################################################
Program id: 10
Execution Stack:
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 22 }
#########################################################################
Program id: 11
Execution Stack:
Write in heap: a -> Integer: 30
v = Integer: 32
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 22 }
#########################################################################
Program id: 10
Execution Stack:
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 22 }
#########################################################################
Program id: 11
Execution Stack:
Write in heap: a -> Integer: 30
v = Integer: 32
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 22 }
#########################################################################
Program id: 10
Execution Stack:
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 22 }
#########################################################################
Program id: 11
Execution Stack:
Write in heap: a -> Integer: 30
v = Integer: 32
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 22 }
#########################################################################
Program id: 10
Execution Stack:
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 22 }
#########################################################################
Program id: 11
Execution Stack:
Write in heap: a -> Integer: 30
v = Integer: 32
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 22 }
#########################################################################
Program id: 10
Execution Stack:
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
Printed: Integer: 10
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 30 }
#########################################################################
Program id: 11
Execution Stack:
v = Integer: 32
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
Printed: Integer: 10
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 30 }
#########################################################################
Program id: 10
Execution Stack:
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
Printed: Integer: 10
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 30 }
#########################################################################
Program id: 11
Execution Stack:
v = Integer: 32
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
Printed: Integer: 10
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 30 }
#########################################################################
Program id: 10
Execution Stack:
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
Printed: Integer: 10
Printed: Integer: 30
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 30 }
#########################################################################
Program id: 11
Execution Stack:
v = Integer: 32
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
Printed: Integer: 10
Printed: Integer: 30
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 30 }
#########################################################################
Program id: 11
Execution Stack:
v = Integer: 32
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 10 }
------------------------------------------------------------------------
Out:
Printed: Integer: 10
Printed: Integer: 30
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 30 }
#########################################################################
Program id: 11
Execution Stack:
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 32 }
------------------------------------------------------------------------
Out:
Printed: Integer: 10
Printed: Integer: 30
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 30 }
#########################################################################
Program id: 11
Execution Stack:
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 32 }
------------------------------------------------------------------------
Out:
Printed: Integer: 10
Printed: Integer: 30
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 30 }
#########################################################################
Program id: 11
Execution Stack:
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 32 }
------------------------------------------------------------------------
Out:
Printed: Integer: 10
Printed: Integer: 30
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 30 }
#########################################################################
Program id: 11
Execution Stack:
Print(v)
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 32 }
------------------------------------------------------------------------
Out:
Printed: Integer: 10
Printed: Integer: 30
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 30 }
#########################################################################
Program id: 11
Execution Stack:
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 32 }
------------------------------------------------------------------------
Out:
Printed: Integer: 10
Printed: Integer: 30
Printed: Integer: 32
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 30 }
#########################################################################
Program id: 11
Execution Stack:
Print((Read from heap a))
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 32 }
------------------------------------------------------------------------
Out:
Printed: Integer: 10
Printed: Integer: 30
Printed: Integer: 32
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 30 }
#########################################################################
Program id: 11
Execution Stack:
------------------------------------------------------------------------
Symbol table:
{ a --> Reference to type: Integer at address: 1 }
{ v --> Integer: 32 }
------------------------------------------------------------------------
Out:
Printed: Integer: 10
Printed: Integer: 30
Printed: Integer: 32
Printed: Integer: 30
------------------------------------------------------------------------
FileTable:
------------------------------------------------------------------------
Heap:
{ 1 --> Integer: 30 }
#########################################################################
